{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/giovane/Documentos/nlw5/www/podcastrnext/src/pages/episode/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './episode.module.scss';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play; // HTML\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"tocar Epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [episode.members, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [episode.publishedAt, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [episode.durationAsString, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n/*\nexport const getStaticPaths: GetStaticPaths = async () => {\n    return {\n      paths: [],\n      fallback: 'blocking',\n    };\n  };\n  \n   export const getStaticProps: GetStaticProps = async ctx => {\n    const { slug } = ctx.params;\n  \n    const { data } = await api.get(`/episodes/${slug}`);\n  \n    const episode = {\n      ...data,\n      publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n        locale: ptBR,\n      }),\n      durationAsString: convertDurationToTimeString(data.file.duration),\n    };\n  \n    return {\n      props: {\n        episode,\n      },\n      revalidate: 60 * 60 * 24,\n    };\n  };\n*/\n///*\n// Função para deixar a tela dinamica\n//*/\n\n_s(Episode, \"mptMREsNBTdRfLLVAN69g5qilFU=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/giovane/Documentos/nlw5/www/podcastrnext/src/pages/episode/[slug].tsx"],"names":["Head","Image","Link","usePlayer","styles","Episode","episode","play","title","thumbnailContainer","thumbnail","members","publishedAt","durationAsString","description","__html"],"mappings":";;;;;AAIA,OAAQA,IAAR,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAKA,OAAOC,MAAP,MAAmB,uBAAnB;;AAmBA,eAAe,SAASC,OAAT,OAAyC;AAAA;;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;;AAAA,mBAClCH,SAAS,EADyB;AAAA,MAC5CI,IAD4C,cAC5CA,IAD4C,EAGpD;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACE,OAAvB;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQA,OAAO,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACK,kBAAvB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,KAAV;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,iCACI;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,KAAD;AACI,QAAA,KAAK,EAAG,GADZ;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,GAAG,EAAEH,OAAO,CAACI,SAHjB;AAII,QAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAPJ,eAcI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMH,IAAI,CAACD,OAAD,CAAV;AAAA,SAA/B;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAyBI;AAAA,8BACI;AAAA,kBAAKA,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBAAOF,OAAO,CAACK,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,mBAAOL,OAAO,CAACM,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,mBAAON,OAAO,CAACO,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ,eAiCI;AACI,MAAA,SAAS,EAAET,MAAM,CAACU,WADtB;AAEI,MAAA,uBAAuB,EAAE;AAACC,QAAAA,MAAM,EAACT,OAAO,CAACQ;AAAhB;AAF7B;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACF;AAkDA;;GA/HwBT,O;UACFF,S;;;KADEE,O","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\n\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport  Head  from 'next/head';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { usePlayer } from '../../contexts/PlayerContext';\n\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nimport styles from './episode.module.scss'\n\ntype Episode = {\n    id: string;\n    title: string;\n    members: string;\n    published_at: string;\n    thumbnail:string;\n    description:string;\n    duration: number;\n    durationAsString: string;\n    url:string;\n    publishedAt: string;\n}\n\ntype EpisodeProps = {\n    episode:Episode;\n}\n\nexport default function Episode({episode}:EpisodeProps) {\n    const { play } =  usePlayer();\n\n    // HTML\n    return(\n        <div className={styles.episode}>\n            <Head>\n                <title>{episode.title}</title> \n            </Head>\n\n            \n            <div className={styles.thumbnailContainer}>\n                <Link href={`/`}>\n                    <button type=\"button\">\n                        <img src=\"/arrow-left.svg\" alt=\"voltar\"/>\n                    </button>\n                </Link>\n\n                <Image \n                    width= {700}\n                    height={160}\n                    src={episode.thumbnail}\n                    objectFit=\"cover\"\n                />\n\n                <button type=\"button\" onClick={() => play(episode)}>\n                    <img src=\"/play.svg\" alt=\"tocar Episódio\" />\n                </button>\n            </div>\n            \n            <header >\n                <h1>{episode.title}</h1>\n                <span>{episode.members} </span>\n                <span>{episode.publishedAt} </span>\n                <span>{episode.durationAsString} </span>\n                \n            </header>\n\n            <div \n                className={styles.description}\n                dangerouslySetInnerHTML={{__html:episode.description}} \n            />\n            \n\n        </div>\n    );\n}\n/*\nexport const getStaticPaths: GetStaticPaths = async () => {\n    return {\n      paths: [],\n      fallback: 'blocking',\n    };\n  };\n  \n   export const getStaticProps: GetStaticProps = async ctx => {\n    const { slug } = ctx.params;\n  \n    const { data } = await api.get(`/episodes/${slug}`);\n  \n    const episode = {\n      ...data,\n      publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n        locale: ptBR,\n      }),\n      durationAsString: convertDurationToTimeString(data.file.duration),\n    };\n  \n    return {\n      props: {\n        episode,\n      },\n      revalidate: 60 * 60 * 24,\n    };\n  };\n*/\n  ///*\n// Função para deixar a tela dinamica\nexport const getStaticPaths: GetStaticPaths = async () =>{\n    const {data } =  await api.get('episodes', {\n        params: {\n          _limit:2,\n          _sort:'published_at',\n          _order: 'desc'\n        }\n      });\n\n      const paths = data.map(episode => { \n          return{\n              params:{\n                  slug: episode.id\n                }\n          }\n      })\n    return{\n        paths\n        /*[\n            {\n                params:{slug:'a-importancia-da-contribuicao-em-open-source'}\n            }\n        ]*/,\n        fallback:'blocking'\n    };\n}\n// Função que deixa a página estática e pega as propriedades \nexport const getStaticProps: GetStaticProps = async (ctx) =>{\n    const {slug} = ctx.params;\n    const {data} = await api.get(`/episodes/${slug}`)\n\n    const episode = {\n        id: data.id,\n        title: data.title,\n        thumbnail: data.thumbnail,\n        members: data.members,\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n        duration: Number(data.file.duration),\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n        description: data.description,\n        url: data.file.url,\n        \n    };\n\n    return{\n        props:{episode},\n        revalidate: 60*60*24 // 24horas    \n    }\n}\n//*/"]},"metadata":{},"sourceType":"module"}