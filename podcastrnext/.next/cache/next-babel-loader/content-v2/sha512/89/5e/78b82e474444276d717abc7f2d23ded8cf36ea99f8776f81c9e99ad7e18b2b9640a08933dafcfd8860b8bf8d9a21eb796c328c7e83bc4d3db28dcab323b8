{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/giovane/Documentos/nlw5/www/podcastrnext/src/components/Player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      togglePlay = _usePlayer.togglePlay,\n      setIsPlayingState = _usePlayer.setIsPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasNext = _usePlayer.hasNext,\n      hasPrevious = _usePlayer.hasPrevious,\n      isLooping = _usePlayer.isLooping,\n      toggleLoop = _usePlayer.toggleLoop,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      isShuffling = _usePlayer.isShuffling,\n      clearPlayerState = _usePlayer.clearPlayerState;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    {\n      hasNext ? playNext() : clearPlayerState();\n    }\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Listen now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: episode.thumbnail,\n        height: 592,\n        width: 592,\n        objectFit: \"cover\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", episode.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", episode.members, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Selecione um podcast para ouvir \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true,\n        loop: isLooping,\n        onEnded: handleEpisodeEnded,\n        onLoadedMetadata: setupProgressListener,\n        onPlay: function onPlay() {\n          return setIsPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setIsPlayingState(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasPrevious,\n          onClick: playPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Pausar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasNext,\n          onClick: playNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar proxima \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"L+DyT0q0AR6KlnIsxVIJS7loUvc=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/giovane/Documentos/nlw5/www/podcastrnext/src/components/Player/index.tsx"],"names":["Image","useRef","useEffect","useState","usePlayer","Slider","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","togglePlay","setIsPlayingState","playNext","playPrevious","hasNext","hasPrevious","isLooping","toggleLoop","toggleShuffle","isShuffling","clearPlayerState","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","handleEpisodeEnded","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\nimport {  useRef, useEffect, useState } from 'react';\nimport {  usePlayer } from '../../contexts/PlayerContext';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css'\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nexport function Player(){\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [progress, setProgress] = useState(0);\n\n    const {\n        episodeList,\n        currentEpisodeIndex,\n        isPlaying,\n        togglePlay,\n        setIsPlayingState,\n        playNext,\n        playPrevious,\n        hasNext,\n        hasPrevious,\n        isLooping,\n        toggleLoop, \n        toggleShuffle,\n        isShuffling, \n        clearPlayerState\n        } =  usePlayer();\n\n        useEffect(()=>{\n            if(!audioRef.current){\n                return;\n            }\n\n            if(isPlaying){\n                audioRef.current.play();\n            }else{\n                audioRef.current.pause();\n            }\n        }, [isPlaying]);\n\n        function setupProgressListener(){\n            audioRef.current.currentTime = 0;\n\n            audioRef.current.addEventListener('timeupdate', () =>{\n                setProgress(Math.floor(audioRef.current.currentTime))\n            })\n        }\n\n        function handleSeek(amount:number){\n            audioRef.current.currentTime = amount;\n            setProgress(amount)\n        }\n\n        function handleEpisodeEnded(){\n            {hasNext ? (\n                playNext()\n            ):(\n                clearPlayerState()\n            )}\n        }\n\n    const episode =  episodeList[currentEpisodeIndex];\n\n\n    return(\n        <div className={styles.playerContainer}>\n            <header>\n                <img src=\"/playing.svg\" alt=\"Listen now\"/>\n                <strong> Tocando agora </strong>\n            </header>\n            \n            { episode ? (\n                <div className={styles.currentEpisode}>\n                    <Image \n                        src={episode.thumbnail}\n                        height={592}\n                        width={592}\n                        objectFit=\"cover\"\n                        alt=\"\"\n                    />\n\n                    <strong> {episode.title} </strong>\n                    <span> {episode.members} </span>\n                </div>\n            ) : (\n                <div className={styles.emptyPlayer}>\n                    <strong> Selecione um podcast para ouvir </strong>\n                </div>\n            ) }\n        \n            <footer className={!episode ?  styles.empty : ''}>\n                <div className={styles.progress}>\n                    <span>{convertDurationToTimeString(progress)}</span>\n                        <div className={styles.slider}>\n                            {episode ? (\n                                <Slider\n                                    max={episode.duration}\n                                    value={progress}\n                                    onChange={handleSeek}\n                                    trackStyle={{backgroundColor:'#04d361'}}\n                                    railStyle = {{backgroundColor:'#9f75ff'}}\n                                    handleStyle = {{borderColor:'#04d361', borderWidth:4}}\n                                />\n                            ) : (\n                                <div className={styles.emptySlider}/>\n                            )}\n                        </div>\n                    <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n                </div>\n                {/* ----------------------------------TAG DE AUDIO INVISIBLE ----------------------------------------------------------------------*/}\n                {episode && (\n                    <audio\n                        src={episode.url}\n                        ref={ audioRef }\n                        autoPlay\n                        loop={isLooping}\n                        onEnded={handleEpisodeEnded}\n                        onLoadedMetadata = {setupProgressListener}\n                        onPlay={()=> setIsPlayingState(true)}\n                        onPause={()=> setIsPlayingState(false)}\n                    />\n                )}\n                {/* -------------------X--------------TAG DE AUDIO INVISIBLE --------------------------X-------------------------------------------*/}\n                {/*Buttons */}                                                              \n                <div className={styles.buttons}>\n                    <button type=\"button\" disabled={!episode || episodeList.length === 1} onClick={toggleShuffle} className={isShuffling ? styles.isActive : ''}>\n                        <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\n                    </button>\n                    <button type=\"button\" disabled={!episode || !hasPrevious} onClick={playPrevious}>\n                        <img src=\"/play-previous.svg\" alt=\"Tocar anterior\"/>\n                    </button>\n                    <button type=\"button\" className={styles.playButton} disabled={!episode} onClick={togglePlay} >\n                            {isPlaying \n                                ? <img src=\"/pause.svg\" alt=\"Pausar\"/>\n                                : <img src=\"/play.svg\" alt=\"Tocar \"/>\n                            }\n                    </button>\n                    <button type=\"button\" disabled={!episode || !hasNext} onClick={playNext} >\n                        <img src=\"/play-next.svg\" alt=\"Tocar proxima \"/>\n                    </button>\n                    <button type=\"button\" disabled={!episode} onClick={toggleLoop} className={isLooping ? styles.isActive : ''}>\n                        <img src=\"/repeat.svg\" alt=\"Repetir\"/>\n                    </button>\n                </div>\n            </footer>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}